{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\confusion\\\\src\\\\components\\\\DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction RenderDish({\n  dish\n}) {\n  retirn( /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    src: dish.image,\n    alt: dish.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }\n  }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }, dish.description)))));\n}\n\nfunction RenderComments({\n  comments\n}) {\n  if (comments != null) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, comments.map(comment => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: comment.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, comment.comment), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, \"-- \", comment.author, \", \\xA0\", new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit'\n    }).format(new Date(Date.parse(comment.date)))));\n  })));else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  });\n}\n\nconst DishDetail = props => {\n  if (props.dish != null) return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"conatainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, props.dish.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, props.dish.name), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RenderDish, {\n    dish: props.dish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(RenderComments, {\n    comments: props.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  })));else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  });\n}; // class Dishdetail extends Component {\n//     componentDidMount(){\n//         console.log('DishDetail ComponentDidMount is invoked');\n//     }\n//     componentDidUpdate(){\n//         console.log('DishDetail ComponentDidUpdate is invoked');\n//     }\n//     renderComments(comments) {\n//         if (comments == null) {\n//             return (<div></div>)\n//         }\n//         const cmnts = comments.map(comment => {\n//             return (\n//                 <li key={comment.id}>\n//                     <p>{comment.comment}</p>\n//                     <p>-- {comment.author},\n//                     &nbsp;\n//                     {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\n//                     </p>\n//                 </li>\n//             )\n//         })\n//         return (\n//             <div className='col-12 col-md-5 m-1'>\n//                 <h4> Comments </h4>\n//                 <ul className='list-unstyled'>\n//                     {cmnts}\n//                 </ul>\n//             </div>\n//         )\n//     }\n//     renderDish(dish) {\n//         if (dish != null) {\n//             return (\n//                 <div className='col-12 col-md-5 m-1'>\n//                     <Card>\n//                         <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n//                         <CardBody>\n//                             <CardTitle>{dish.name}</CardTitle>\n//                             <CardText>{dish.description}</CardText>\n//                         </CardBody>\n//                     </Card>\n//                 </div>\n//             )\n//         }\n//         else {\n//             return (<div></div>)\n//         }\n//     }\n//     render() {\n//         console.log('DishDetail ComponentDidMount  rennder is invoked');\n//         const dish = this.props.dish\n//         if (dish == null) {\n//             return (<div></div>)\n//         }\n//         const dishItem = this.renderDish(this.props.dish)\n//         const commentItem = this.renderComments(this.props.dish.comments)\n//         return (\n//             <div className=\"container\">\n//                 <div className='row'>\n//                     {dishItem}\n//                     {commentItem}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n\nexport default Dishdetail;","map":{"version":3,"sources":["D:/React/confusion/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardBody","CardText","CardTitle","Breadcrumb","BreadcrumbItem","Link","RenderDish","dish","retirn","image","name","description","RenderComments","comments","map","comment","id","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","props","Dishdetail"],"mappings":"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AAY,IAAA,IAAI,EAAEkB,KAAK,CAACrB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEqB,KAAK,CAACf,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAXJ,CADJ,CADJ,KAoBI,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGP,CAxBD,C,CAyBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAegB,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardImg, CardBody, CardText, CardTitle,Breadcrumb,BreadcrumbItem } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nfunction RenderDish({dish}){\r\n    retirn (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg top src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nfunction RenderComments({comments}){\r\n    if(comments !=null)\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    {comments.map((comment)=>{\r\n                        return(\r\n                            <li key={comment.id}>\r\n                            <p>{comment.comment}</p>\r\n                            <p>-- {comment.author}, &nbsp;\r\n                            {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\nconst DishDetail=(props)=>{\r\n    if(props.dish !=null)\r\n        return (\r\n            <div class=\"conatainer\">\r\n                <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active >{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish}/>\r\n                    <RenderComments comments={props.comments}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n// class Dishdetail extends Component {\r\n//     componentDidMount(){\r\n//         console.log('DishDetail ComponentDidMount is invoked');\r\n//     }\r\n//     componentDidUpdate(){\r\n//         console.log('DishDetail ComponentDidUpdate is invoked');\r\n\r\n//     }\r\n//     renderComments(comments) {\r\n//         if (comments == null) {\r\n//             return (<div></div>)\r\n//         }\r\n//         const cmnts = comments.map(comment => {\r\n//             return (\r\n//                 <li key={comment.id}>\r\n//                     <p>{comment.comment}</p>\r\n//                     <p>-- {comment.author},\r\n//                     &nbsp;\r\n//                     {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n//                     </p>\r\n//                 </li>\r\n//             )\r\n//         })\r\n//         return (\r\n//             <div className='col-12 col-md-5 m-1'>\r\n//                 <h4> Comments </h4>\r\n//                 <ul className='list-unstyled'>\r\n//                     {cmnts}\r\n//                 </ul>\r\n\r\n//             </div>\r\n//         )\r\n//     }\r\n\r\n//     renderDish(dish) {\r\n//         if (dish != null) {\r\n//             return (\r\n//                 <div className='col-12 col-md-5 m-1'>\r\n//                     <Card>\r\n//                         <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n//                         <CardBody>\r\n//                             <CardTitle>{dish.name}</CardTitle>\r\n//                             <CardText>{dish.description}</CardText>\r\n//                         </CardBody>\r\n//                     </Card>\r\n//                 </div>\r\n//             )\r\n//         }\r\n//         else {\r\n//             return (<div></div>)\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         console.log('DishDetail ComponentDidMount  rennder is invoked');\r\n\r\n//         const dish = this.props.dish\r\n//         if (dish == null) {\r\n//             return (<div></div>)\r\n//         }\r\n//         const dishItem = this.renderDish(this.props.dish)\r\n//         const commentItem = this.renderComments(this.props.dish.comments)\r\n//         return (\r\n//             <div className=\"container\">\r\n//                 <div className='row'>\r\n//                     {dishItem}\r\n//                     {commentItem}\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default Dishdetail"]},"metadata":{},"sourceType":"module"}