{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/FooterComponent.js","components/DishdetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","to","id","width","src","image","alt","name","Menu","props","dishes","isLoading","menu","map","key","active","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","onClick","href","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","Component","RenderCard","item","errMess","in","transformProps","exitTransform","designation","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","About","RenderLeader","leaders","leaders_list","left","object","body","heading","list","title","Footer","RenderDish","RenderComments","comments","postComment","dishId","cmnts","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","date","CommentForm","rating","defaultValue","React","DishDetail","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2bf2467f.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\n\nimport {\n    Card,\n    CardImg,\n    CardImgOverlay,\n    CardTitle,\n    Breadcrumb,\n    BreadcrumbItem\n} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nfunction RenderMenuItem({dish}) {\n\n\n    return (\n        <Card>\n            <Link to={\n                `/menu/${\n                    dish.id\n                }`\n            }>\n                <CardImg width=\"100%\"\n                    src={\n                        baseUrl+dish.image\n                    }\n                    alt={\n                        dish.name\n                    }/>\n                <CardImgOverlay>\n                    <CardTitle>{\n                        dish.name\n                    }</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nconst Menu = (props) => {\n\n    if (props.dishes.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading/>\n                </div>\n            </div>\n        );\n    }\n\n    const menu = props.dishes.dishes.map((dish) => {\n\n        return (\n            <div className=\"col-12 col-md-5 m-1\"\n                key={\n                    dish.id\n            }>\n                <RenderMenuItem dish={dish}\n                    isLoading\n                    ={props.dishes.isLoading}/>\n            </div>\n        );\n\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem>\n                        <Link to=\"/home\">Home</Link>\n                    </BreadcrumbItem>\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Menu</h3>\n                    <hr/>\n                </div>\n            </div>\n            <div className=\"row\">\n                {menu} </div>\n        </div>\n    );\n}\n\nexport default Menu;\n","import React, {Component} from 'react';\n\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavbarToggler,\n    Collapse,\n    NavItem,\n    Jumbotron,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Input,\n    Label\n} from 'reactstrap';\n\n\nimport {NavLink} from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={\n                            this.toggleNav\n                        }/>\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img alt='Ristorante Con Fusion' height=\"30\" src='assets/images/logo.png' width=\"41\"/></NavbarBrand>\n                        <Collapse isOpen={\n                                this.state.isNavOpen\n                            }\n                            navbar>\n                            <Nav navbar>\n                                <NavItem></NavItem>\n\n                                <NavLink className=\"nav-link\" to='/home'>\n                                    <span className=\"fa fa-home fa-lg\"></span>\n                                    Home</NavLink>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/aboutus'>\n                                        <span className=\"fa fa-info fa-lg\"></span>\n                                        About Us</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/menu'>\n                                        <span className=\"fa fa-list fa-lg\"></span>\n                                        Menu</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/contactus'>\n                                        <span className=\"fa fa-address-card fa-lg\"></span>\n                                        Contact Us</NavLink>\n                                </NavItem>\n\n                            </Nav>\n\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline\n                                        onClick={\n                                            this.toggleModal\n                                    }>\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>\n                                        Login</Button>\n                                </NavItem>\n                            </Nav>\n\n                        </Collapse>\n                    </div>\n                </Navbar>\n\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n\n                <Modal isOpen={\n                        this.state.isModalOpen\n                    }\n                    toggle={\n                        this.toggleModal\n                }>\n                    <ModalHeader toggle={\n                        this.toggleModal\n                    }>Login</ModalHeader>\n                    <ModalBody>\n\n                        <Form onSubmit={\n                            this.handleLogin\n                        }>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={\n                                        (input) => this.username = input\n                                    }/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={\n                                        (input) => this.password = input\n                                    }/>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={\n                                            (input) => this.remember = input\n                                        }/>\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button color=\"primary\" type=\"submit\" value=\"submit\">Login</Button>\n                        </Form>\n\n                    </ModalBody>\n                </Modal>\n\n\n            </div>\n\n\n        );\n    }\n\n}\n\nexport default Header;\n","import React from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle\n} from \"reactstrap\";\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { FadeTransform } from \"react-animation-components\";\n\nfunction RenderCard({ item, isLoading, errMess }) {\n  if (isLoading) {\n    return <Loading />;\n  } else if (errMess) {\n    return <h4>{errMess}</h4>;\n  } else {\n    return (\n      <FadeTransform\n        in\n        transformProps={{ exitTransform: \"scale(0.5) translateY(-50%)\" }}\n      >\n        <Card>\n          <CardImg src={baseUrl + item.image} alt={item.name} />\n          <CardBody>\n            <CardTitle>{item.name}</CardTitle>\n            {item.designation ? (\n              <CardSubtitle>{item.designation}</CardSubtitle>\n            ) : null}\n            <CardText>{item.description}</CardText>\n          </CardBody>\n        </Card>\n      </FadeTransform>\n    );\n  }\n}\n\nfunction Home(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"row align-items-start\">\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard\n            item={props.dish}\n            isLoading={props.dishesLoading}\n            errMess={props.dishesErrMess}\n          />\n        </div>\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard\n            item={props.promotion}\n            isLoading={props.promoLoading}\n            errMess={props.promoErrMess}\n          />\n        </div>\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard\n            item={props.leader}\n            isLoading={props.leaderLoading}\n            errMess={props.leaderErrMess}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Row,\n    Col,\n    Label\n} from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        // alert('Current State is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem>\n                            <Link to=\"/home\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr/>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road\n                            <br/>\n                            Clear Water Bay, Kowloon\n                            <br/>\n                            HONG KONG\n                            <br/>\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678\n                            <br/>\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321\n                            <br/>\n                            <i className=\"fa fa-envelope\"></i>:{\" \"}\n                            <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a className=\"btn btn-primary\" href=\"tel:+85212345678\" role=\"button\">\n                                <i className=\"fa fa-phone\"></i>\n                                Call\n                            </a>\n                            <a className=\"btn btn-info\" role=\"button\">\n                                <i className=\"fa fa-skype\"></i>\n                                Skype\n                            </a>\n                            <a className=\"btn btn-success\" href=\"mailto:confusion@food.net\" role=\"button\">\n                                <i className=\"fa fa-envelope-o\"></i>\n                                Email\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form  model=\"feedback\" onSubmit={\n                            (values) => this.handleSubmit(values)\n                        }>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\"\n                                    md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\"\n                                        validators={\n                                            {\n                                                required,\n                                                minLength: minLength(3),\n                                                maxLength: maxLength(15)\n                                            }\n                                        }/>\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\"\n                                        messages={\n                                            {\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }\n                                        }/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\"\n                                    md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\"\n                                        validators={\n                                            {\n                                                required,\n                                                minLength: minLength(3),\n                                                maxLength: maxLength(15)\n                                            }\n                                        }/>\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\"\n                                        messages={\n                                            {\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }\n                                        }/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\"\n                                    md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" className=\"form-control\"\n                                        validators={\n                                            {\n                                                required,\n                                                minLength: minLength(3),\n                                                maxLength: maxLength(15),\n                                                isNumber\n                                            }\n                                        }/>\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\"\n                                        messages={\n                                            {\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 numbers',\n                                                maxLength: 'Must be 15 numbers or less',\n                                                isNumber: 'Must be a number'\n                                            }\n                                        }/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\"\n                                    md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\"\n                                        validators={\n                                            {required, validEmail}\n                                        }/>\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\"\n                                        messages={\n                                            {\n                                                required: 'Required',\n                                                validEmail: 'Invalid Email Address'\n                                            }\n                                        }/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={\n                                    {\n                                        size: 6,\n                                        offset: 2\n                                    }\n                                }>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox className=\"form-check-input\" model=\".agree\" name=\"agree\"/> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={\n                                    {\n                                        size: 3,\n                                        offset: 1\n                                    }\n                                }>\n                                    <Control.select className=\"form-control\" model=\".contactType\" name=\"contactType\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\"\n                                    md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea className=\"form-control\" id=\"message\" model=\".message\" name=\"message\" rows=\"12\"/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={\n                                    {\n                                        size: 10,\n                                        offset: 2\n                                    }\n                                }>\n                                    <Button color=\"primary\" type=\"submit\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from \"react\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  CardBody,\n  CardHeader,\n  Media\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { Fade, Stagger } from \"react-animation-components\";\nimport { Loading } from \"./LoadingComponent\";\n\nfunction About(props) {\n  const RenderLeader = ({ leaders, leaderLoading, leaderErrMess }) => {\n    console.log(leaderLoading, leaderErrMess);\n\n    const leaders_list = leaders.map(leader => {\n      return (\n        <Fade in key={leader.id}>\n          <Media>\n            <Media left>\n              <Media object src={baseUrl + leader.image} alt={leader.name} />\n            </Media>\n            <Media body className=\"ml-2\">\n              <Media heading>{leader.name}</Media>\n              <p>{leader.designation}</p>\n              <p>{leader.description}</p>\n            </Media>\n          </Media>\n        </Fade>\n      );\n    });\n    // Returning the complete leader's list\n    if (leaderLoading) {\n      return <Loading />;\n    } else if (leaderErrMess) {\n      return <h4>{leaderErrMess}</h4>;\n    } else\n      return (\n        <Media list>\n          <Stagger in>{leaders_list}</Stagger>\n        </Media>\n      );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/home\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"col-12\">\n          <h3>About Us</h3>\n          <hr />\n        </div>\n      </div>\n      <div className=\"row row-content\">\n        <div className=\"col-12 col-md-6\">\n          <h2>Our History</h2>\n          <p>\n            Started in 2010, Ristorante con Fusion quickly established itself as\n            a culinary icon par excellence in Hong Kong. With its unique brand\n            of world fusion cuisine that can be found nowhere else, it enjoys\n            patronage from the A-list clientele in Hong Kong. Featuring four of\n            the best three-star Michelin chefs in the world, you never know what\n            will arrive on your plate the next time you visit us.\n          </p>\n          <p>\n            The restaurant traces its humble beginnings to{\" \"}\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\n            Peter Pan, that featured for the first time the world's best\n            cuisines in a pan.\n          </p>\n        </div>\n        <div className=\"col-12 col-md-5\">\n          <Card>\n            <CardHeader className=\"bg-primary text-white\">\n              Facts At a Glance\n            </CardHeader>\n            <CardBody>\n              <dl className=\"row p-1\">\n                <dt className=\"col-6\">Started</dt>\n                <dd className=\"col-6\">3 Feb. 2013</dd>\n                <dt className=\"col-6\">Major Stake Holder</dt>\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                <dt className=\"col-6\">Last Year's Turnover</dt>\n                <dd className=\"col-6\">$1,250,375</dd>\n                <dt className=\"col-6\">Employees</dt>\n                <dd className=\"col-6\">40</dd>\n              </dl>\n            </CardBody>\n          </Card>\n        </div>\n        <div className=\"col-12\">\n          <Card>\n            <CardBody className=\"bg-faded\">\n              <blockquote className=\"blockquote\">\n                <p className=\"mb-0\">\n                  You better cut the pizza in four pieces because I'm not hungry\n                  enough to eat six.\n                </p>\n                <footer className=\"blockquote-footer\">\n                  Yogi Berra,\n                  <cite title=\"Source Title\">\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\n                    2014\n                  </cite>\n                </footer>\n              </blockquote>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n      <div className=\"row row-content\">\n        <div className=\"col-12\">\n          <h2>Corporate Leadership</h2>\n        </div>\n\n        <div className=\"col-12\">\n          <RenderLeader\n            leaders={props.leaders}\n            leaderLoading={props.isLoading}\n            leaderErrMess={props.errMess}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li>\n                                <Link to='/home'>Home</Link>\n                            </li>\n                            <li>\n                                <Link to='/aboutus'>About Us</Link>\n                            </li>\n                            <li>\n                                <Link to='/menu'>Menu</Link>\n                            </li>\n                            <li>\n                                <Link to='/contactus'>Contact Us</Link>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br/>\n                            Clear Water Bay, Kowloon<br/>\n                            HONG KONG<br/>\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br/>\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br/>\n                            <i className=\"fa fa-envelope fa-lg\"></i>:\n                            <a href=\"mailto:confusion@food.net\">\n                                confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\">\n                                <i className=\"fa fa-google-plus\"></i>\n                            </a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\">\n                                <i className=\"fa fa-facebook\"></i>\n                            </a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\">\n                                <i className=\"fa fa-linkedin\"></i>\n                            </a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\">\n                                <i className=\"fa fa-twitter\"></i>\n                            </a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\">\n                                <i className=\"fa fa-youtube\"></i>\n                            </a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\">\n                                <i className=\"fa fa-envelope-o\"></i>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;\n","import React from \"react\";\nimport {\n    Card,\n    CardImg,\n    CardText,\n    CardBody,\n    CardTitle,\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Row,\n    Col,\n    Label\n} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport {Control, LocalForm, Errors} from \"react-redux-form\";\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nfunction RenderDish({dish}) {\n    \n    if(dish != null) {\n        return (<div >\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg width=\"100%\"\n                        src={\n                            baseUrl+dish.image\n                        }\n                        alt={\n                            dish.name\n                        }/>\n                    <CardBody>\n                        <CardTitle> {\n                            dish.name\n                        }</CardTitle>\n                        <CardText> {\n                            dish.description\n                        }</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>    \n        </div>);\n    } else {\n        return <div></div>;\n    }\n}\n\nfunction RenderComments({comments, postComment, dishId}) {\n    if (comments == null) {\n        return <div></div>;\n    }\n    let comments_list = comments;\n    const cmnts = comments_list.map(comment => {\n        return (\n            <Fade in>\n                <li key={\n                    comment.id\n                }>\n                    <p> {\n                        comment.comment\n                    }</p>\n                    <p>\n                        -- {\n                        comment.author\n                    }, &nbsp;{\" \"}\n                        {\n                        new Intl.DateTimeFormat(\"en-US\", {\n                            year: \"numeric\",\n                            month: \"long\",\n                            day: \"2-digit\"\n                        }).format(new Date(comment.date))\n                    }\n                        {\" \"} </p>\n                </li>\n            </Fade>\n        );\n    });\n    return (<div>\n        <h4>Comments</h4>\n        <ul className=\"list-unstyled\">\n            <Stagger in>\n                {cmnts}\n            </Stagger> \n        </ul>\n    </div>);\n}\n\nconst DishDetail = props => {\n   \n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    } \n    else{\n        return (<div className=\"container\">\n        <div className=\"row\">\n            <Breadcrumb>\n                <BreadcrumbItem>\n                    <Link to=\"/menu\">Menu</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem active> {\n                    props.dish.name\n                }</BreadcrumbItem>\n            </Breadcrumb>\n            <div className=\"col-12\">\n                <h3> {\n                    props.dish.name\n                }</h3>\n                <hr/>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-12 col-md-5 m-1\">\n                <RenderDish dish={\n                    props.dish\n                }/>\n            </div>\n            <div className=\"col-12 col-md-5 m-1\">\n                <RenderComments comments={\n                    props.comments\n                }/>\n                <CommentForm dishId={\n                        props.dish.id\n                    }\n                    postComment={\n                        props.postComment\n                    }/>\n            </div>\n        </div>\n    </div>);\n    }   \n   \n   \n   \n};\nconst maxLength = len => val => !val || val.length <= len;\nconst minLength = len => val => val && val.length >= len;\n\nclass CommentForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) { // console.log(\"Current State is: \" + JSON.stringify(values));\n        // alert(\"Current State is: \" + JSON.stringify(values));\n        this.toggleModal();\n\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return (<div>\n            <Button outline\n                onClick={\n                    this.toggleModal\n            }>\n                <span className=\"fa fa-pencil\"></span>\n                Submit Comment\n            </Button>\n\n            <Modal isOpen={\n                    this.state.isModalOpen\n                }\n                toggle={\n                    this.toggleModal\n            }>\n                <ModalHeader toggle={\n                    this.toggleModal\n                }>Submit Comment</ModalHeader>\n                <ModalBody>\n                    <LocalForm onSubmit={\n                        values => this.handleSubmit(values)\n                    }>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"rating\"\n                                md={2}>Rating</Label>\n                            <Col md={10}>\n                                <Control.select className=\"form-control\" defaultValue=\"1\" id=\"rating\" model=\".rating\" name=\"rating\">\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                </Control.select>\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"author\"\n                                md={2}>\n                                Your Name\n                            </Label>\n                            <Col md={10}>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" className=\"form-control\"\n                                    validators={\n                                        {\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }\n                                    }/>\n                                <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\n                                    messages={\n                                        {\n                                            minLength: \"Must be greater than 2 characters\",\n                                            maxLength: \"Must be 15 characters or less\"\n                                        }\n                                    }/>\n                            </Col>\n                        </Row>\n\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"message\"\n                                md={2}>\n                                Comment\n                            </Label>\n                            <Col md={10}>\n                                <Control.textarea className=\"form-control\" id=\"comment\" model=\".comment\" name=\"comment\" rows=\"6\"/>\n                            </Col>\n                        </Row>\n\n                        <Row className=\"form-group\">\n                            <Col md={\n                                {size: 12}\n                            }>\n                                <Button color=\"primary\" value=\"submit\">\n                                    Submit\n                                </Button>\n                            </Col>\n                        </Row>\n                    </LocalForm>\n                </ModalBody>\n            </Modal>\n        </div>);\n    }\n}\n\nexport default DishDetail;\n","import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  };\n  newComment.date = new Date().toISOString();\n\n  return fetch(baseUrl + \"comments\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        throw error;\n      }\n    )\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => {\n      console.log(\"post comments\", error.message);\n      alert(\"Your comment could not be posted\\nError: \" + error.message);\n    });\n};\n\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n\n  return fetch(baseUrl + \"dishes\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n};\n\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\n\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + \"comments\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\n\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\n\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n\n  return fetch(baseUrl + \"promotions\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\n\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});\n\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading());\n\n  return fetch(baseUrl + \"leaders\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = errmess => ({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess\n});\n\nexport const addLeaders = leaders => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n\nexport const postFeedback = (\n  firstname,\n  lastname,\n  telnum,\n  email,\n  agree,\n  contactType,\n  message\n) => dispatch => {\n  const newFeedback = {\n    firstname: firstname,\n    lastname: lastname,\n    telnum: telnum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n\n  return fetch(baseUrl + \"feedback\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        throw error;\n      }\n    )\n    .then(response => response.json())\n    .then(response =>\n      alert(\"Thank for submitting feedback!\" + JSON.stringify(response))\n    )\n    .catch(error => {\n      console.log(\"post feedbacks\", error.message);\n      alert(\"Your feedback could not be posted!\\nError: \" + error.message);\n    });\n};","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';","import React, { Component } from \"react\";\nimport Menu from \"./MenuComponent\";\nimport Header from \"./HeaderComponent\";\nimport Home from \"./HomeComponent\";\nimport Contact from \"./ContactComponent\";\nimport About from \"./AboutComponent\";\nimport Footer from \"./FooterComponent\";\nimport DishDetail from \"./DishdetailComponent\";\nimport {\n  postComment,\n  fetchDishes,\n  fetchComments,\n  fetchPromos,\n  fetchLeaders,\n  postFeedback\n} from \"../redux/ActionCreators\";\n\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"react-redux-form\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst mapDispatchToProps = dispatch => ({\n  postComment: (dishId, rating, author, comment) =>\n    dispatch(postComment(dishId, rating, author, comment)),\n  postFeedback: (\n    firstname,\n    lastname,\n    telnum,\n    email,\n    agree,\n    contactType,\n    message\n  ) =>\n    dispatch(\n      postFeedback(\n        firstname,\n        lastname,\n        telnum,\n        email,\n        agree,\n        contactType,\n        message\n      )\n    ),\n  fetchDishes: () => {\n    dispatch(fetchDishes());\n  },\n  resetFeedbackForm: () => {\n    dispatch(actions.reset(\"feedback\"));\n  },\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  fetchLeaders: () => dispatch(fetchLeaders())\n});\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  };\n};\n\nclass Main extends Component {\n  \n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n  onDishSelect(dishId) {\n    this.setState({ selectedDish: dishId });\n  }\n\n  render() {\n    const HomePage = () => {\n      return (\n        <Home\n          dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\n          dishesLoading={this.props.dishes.isLoading}\n          dishErrMess={this.props.dishes.errMess}\n          promotion={\n            this.props.promotions.promotions.filter(promo => promo.featured)[0]\n          }\n          promoLoading={this.props.promotions.isLoading}\n          promoErrMess={this.props.promotions.errMess}\n          leader={\n            this.props.leaders.leaders.filter(leader => leader.featured)[0]\n          }\n          leaderLoading={this.props.leaders.isLoading}\n          leaderErrMess={this.props.leaders.errMess}\n        />\n      );\n    };\n\n    const DishWithId = ({ match }) => {\n      return (\n        <DishDetail\n          dish={\n            this.props.dishes.dishes.filter(\n              dish => dish.id === parseInt(match.params.dishId, 10)\n            )[0]\n          }\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter(\n            comment => comment.dishId === parseInt(match.params.dishId, 10)\n          )}\n          postComment={this.props.postComment}\n        />\n      );\n    };\n    const AboutPage = () => {\n      return (\n        <About\n          leaders={this.props.leaders.leaders}\n          isLoading={this.props.leaders.isLoading}\n          errMess={this.props.leaders.errMess}\n        />\n      );\n    };\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition\n            key={this.props.location.key}\n            classNames=\"page\"\n            timeout={300}\n          >\n            <Switch location={this.props.location}>\n              <Route path=\"/home\" component={HomePage} />\n              <Route\n                exact\n                path=\"/menu\"\n                component={() => <Menu dishes={this.props.dishes} />}\n              />\n              <Route\n                exact\n                path=\"/contactus\"\n                component={() => (\n                  <Contact\n                    resetFeedbackForm={this.props.resetFeedbackForm}\n                    postFeedback={this.props.postFeedback}\n                  />\n                )}\n              />\n\n              <Route path=\"/aboutus\" component={AboutPage} />\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\n              <Redirect to=\"/home\" />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\n\nexport const Dishes = (state = { isLoading: true,\n    errMess: null,\n    dishes:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n        return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n    case ActionTypes.COMMENTS_FAILED:\n      return {...state, isLoading: false, errMess: action.payload};\n\n    case ActionTypes.ADD_COMMENT:\n        var comment = action.payload;\n        return { ...state, comments: state.comments.concat(comment)};\n\n    default:\n      return state;\n  }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = { isLoading: true,\n                                        errMess: null,\n                                        promotions:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\n\n        default:\n          return state;\n      }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: null,\n                leaders: action.payload\n            };\n\n        case ActionTypes.LEADERS_LOADING:\n            return {\n                ...state,\n                isLoading: true,\n                errMess: null,\n                leaders: []\n            }\n\n        case ActionTypes.LEADERS_FAILED:\n            return {\n                ...state,\n                isLoading: false,\n                errMess: action.payload\n            };\n\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport './App.css';\nimport Main from './components/MainComponent'\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\n\nclass App extends React.Component {\n\n\n    render() {\n        return (\n            <Provider store={store}>\n            <BrowserRouter>\n              <div className=\"App\">\n                <Main />\n              </div>\n            </BrowserRouter>\n          </Provider>\n        );\n    }\n\n\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.css';\n// import 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render (\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}